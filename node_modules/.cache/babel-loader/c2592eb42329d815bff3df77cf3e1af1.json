{"ast":null,"code":"import _toConsumableArray from\"/Users/danielmorales/Projects/personal-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/danielmorales/Projects/personal-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/danielmorales/Projects/personal-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/danielmorales/Projects/personal-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/danielmorales/Projects/personal-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component,Fragment}from'react';import'./BoardBuilder.css';import Board from'../../components/Board/Board';import Colors from'../../components/Board/Controllers/Colors';import Frames from'../../components/Board/Controllers/Frames';var WIDTH=15;var HEIGHT=15;var SIZE=WIDTH*HEIGHT;var DEFAULT_COLOR=\"#000000\";var BoardBuilder=/*#__PURE__*/function(_Component){_inherits(BoardBuilder,_Component);var _super=_createSuper(BoardBuilder);function BoardBuilder(props){var _this;_classCallCheck(this,BoardBuilder);_this=_super.call(this,props);_this.palletColorHandler=function(color){_this.setState({currentColor:color});};_this.pixelColorHandler=function(index){var tempFrame=_toConsumableArray(_this.state.currentFrame);tempFrame[index]=_this.state.currentColor;_this.setState({currentFrame:tempFrame});};_this.sketchChangeHandler=function(color){_this.setState({sketchColor:color.hex});};_this.addFrameHandler=function(type){var newFrame=new Array(SIZE);if(type===\"new\")newFrame.fill(DEFAULT_COLOR);else if(type===\"copy\")newFrame=_this.state.currentFrame;var frameNum=_this.state.frame+1;_this.state.animation.splice(frameNum,0,newFrame);_this.setState({frame:frameNum,currentFrame:newFrame});};_this.sketchSelectClicked=function(){_this.setState({currentColor:_this.state.sketchColor});};_this.arrowHandler=function(direction){console.log(direction);};_this.state={boardWidth:WIDTH,boardHeight:HEIGHT,animation:[],currentFrame:[],frame:0,currentColor:DEFAULT_COLOR,history:[],sketchColor:\"#FFFFFF\"};var frame=new Array(SIZE);frame.fill(DEFAULT_COLOR);_this.state.currentFrame=frame;return _this;}_createClass(BoardBuilder,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"boardBuilder__container\"},/*#__PURE__*/React.createElement(Colors,{currentColor:this.state.currentColor,sketchColor:this.state.sketchColor,sketchChangeHandler:this.sketchChangeHandler,sketchSelectClicked:this.sketchSelectClicked}),/*#__PURE__*/React.createElement(Board,{width:this.state.boardWidth,height:this.state.boardHeight,frame:this.state.currentFrame,pixelClicked:this.pixelColorHandler}),/*#__PURE__*/React.createElement(Frames,{addFrameHandler:this.addFrameHandler})));}}]);return BoardBuilder;}(Component);export default BoardBuilder;","map":{"version":3,"sources":["/Users/danielmorales/Projects/personal-website/src/containers/BoardBuilder/BoardBuilder.js"],"names":["React","Component","Fragment","Board","Colors","Frames","WIDTH","HEIGHT","SIZE","DEFAULT_COLOR","BoardBuilder","props","palletColorHandler","color","setState","currentColor","pixelColorHandler","index","tempFrame","state","currentFrame","sketchChangeHandler","sketchColor","hex","addFrameHandler","type","newFrame","Array","fill","frameNum","frame","animation","splice","sketchSelectClicked","arrowHandler","direction","console","log","boardWidth","boardHeight","history"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\n\nimport './BoardBuilder.css';\n\nimport Board from '../../components/Board/Board';\nimport Colors from '../../components/Board/Controllers/Colors';\nimport Frames from '../../components/Board/Controllers/Frames';\n\nconst WIDTH = 15;\nconst HEIGHT = 15;\nconst SIZE = WIDTH  * HEIGHT; \nconst DEFAULT_COLOR = \"#000000\";\n\nclass BoardBuilder extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            boardWidth: WIDTH,\n            boardHeight: HEIGHT,\n            animation: [],\n            currentFrame: [],\n            frame: 0,\n            currentColor: DEFAULT_COLOR,\n            history: [],\n            sketchColor: \"#FFFFFF\"\n        }\n\n        let frame = new Array(SIZE);\n        frame.fill(DEFAULT_COLOR);\n        this.state.currentFrame = frame;\n    }\n\n    palletColorHandler = (color) => {\n        this.setState({currentColor: color})\n    }\n\n    pixelColorHandler = (index) => {\n        let tempFrame = [...this.state.currentFrame];\n        tempFrame[index] = this.state.currentColor;\n        this.setState({currentFrame: tempFrame});\n    }\n\n    sketchChangeHandler = (color) => {\n        this.setState({ sketchColor: color.hex });\n    };\n\n    addFrameHandler = (type) => {\n        let newFrame = new Array(SIZE);\n\n        if(type === \"new\")\n            newFrame.fill(DEFAULT_COLOR);\n        else if(type === \"copy\")\n            newFrame = this.state.currentFrame;\n    \n        const frameNum = this.state.frame + 1;\n        this.state.animation.splice(frameNum, 0, newFrame);\n\n        this.setState({\n           frame: frameNum,\n           currentFrame: newFrame\n        });\n    }\n\n    sketchSelectClicked = () => {\n        this.setState({ currentColor: this.state.sketchColor })\n    }\n\n    arrowHandler = (direction) => {\n        console.log(direction);\n    }\n\n    render(){\n        return(\n            <Fragment>\n                <div className={\"boardBuilder__container\"}>\n                    <Colors \n                        currentColor={this.state.currentColor}\n                        sketchColor={this.state.sketchColor}\n                        sketchChangeHandler={this.sketchChangeHandler}\n                        sketchSelectClicked={this.sketchSelectClicked}/>\n                    <Board \n                        width={this.state.boardWidth}\n                        height={this.state.boardHeight}\n                        frame={this.state.currentFrame}\n                        pixelClicked={this.pixelColorHandler} />\n                    <Frames \n                        addFrameHandler={this.addFrameHandler}/>\n                </div>\n            </Fragment>\n        );\n    };\n}\n\nexport default BoardBuilder;"]},"metadata":{},"sourceType":"module"}