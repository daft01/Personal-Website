{"ast":null,"code":"var _jsxFileName = \"/Users/danielmorales/ledmatrix/led-website/src/containers/BoardBuilder/BoardBuilder.js\";\nimport React, { Component, Fragment } from 'react';\nimport './BoardBuilder.css';\nimport Board from '../../components/Board/Board';\nimport Colors from '../../components/Board/Controllers/Colors';\nimport Frames from '../../components/Board/Controllers/Frames';\nconst WIDTH = 15;\nconst HEIGHT = 15;\nconst SIZE = WIDTH * HEIGHT;\nconst DEFAULT_COLOR = \"#000000\";\n\nclass BoardBuilder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.palletColorHandler = color => {\n      this.setState({\n        currentColor: color\n      });\n    };\n\n    this.pixelColorHandler = index => {\n      let tempFrame = [...this.state.currentFrame];\n      tempFrame[index] = this.state.currentColor;\n      this.setState({\n        currentFrame: tempFrame\n      });\n    };\n\n    this.sketchChangeHandler = color => {\n      this.setState({\n        sketchColor: color.hex\n      });\n    };\n\n    this.addFrameHandler = type => {\n      let newFrame = new Array(SIZE);\n      if (type === \"new\") newFrame.fill(DEFAULT_COLOR);else if (type === \"copy\") newFrame = this.state.currentFrame;\n      this.state.animation.splice(this.state.frame + 1, 0, newFrame);\n    };\n\n    this.sketchSelectClicked = () => {\n      this.setState({\n        currentColor: this.state.sketchColor\n      });\n    };\n\n    this.arrowHandler = direction => {\n      console.log(direction);\n    };\n\n    this.state = {\n      boardWidth: WIDTH,\n      boardHeight: HEIGHT,\n      animation: [],\n      currentFrame: [],\n      frame: 0,\n      currentColor: DEFAULT_COLOR,\n      history: [],\n      sketchColor: \"#FFFFFF\"\n    };\n    let frame = new Array(SIZE);\n    frame.fill(DEFAULT_COLOR);\n    this.state.currentFrame = frame;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boardBuilder__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Colors, {\n      currentColor: this.state.currentColor,\n      sketchColor: this.state.sketchColor,\n      sketchChangeHandler: this.sketchChangeHandler,\n      sketchSelectClicked: this.sketchSelectClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Board, {\n      width: this.state.boardWidth,\n      height: this.state.boardHeight,\n      frame: this.state.currentFrame,\n      pixelClicked: this.pixelColorHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Frames, {\n      addFrameHandler: this.addFrameHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default BoardBuilder;","map":{"version":3,"sources":["/Users/danielmorales/ledmatrix/led-website/src/containers/BoardBuilder/BoardBuilder.js"],"names":["React","Component","Fragment","Board","Colors","Frames","WIDTH","HEIGHT","SIZE","DEFAULT_COLOR","BoardBuilder","constructor","props","palletColorHandler","color","setState","currentColor","pixelColorHandler","index","tempFrame","state","currentFrame","sketchChangeHandler","sketchColor","hex","addFrameHandler","type","newFrame","Array","fill","animation","splice","frame","sketchSelectClicked","arrowHandler","direction","console","log","boardWidth","boardHeight","history","render"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\n\nimport './BoardBuilder.css';\n\nimport Board from '../../components/Board/Board';\nimport Colors from '../../components/Board/Controllers/Colors';\nimport Frames from '../../components/Board/Controllers/Frames';\n\nconst WIDTH = 15;\nconst HEIGHT = 15;\nconst SIZE = WIDTH  * HEIGHT; \nconst DEFAULT_COLOR = \"#000000\";\n\nclass BoardBuilder extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            boardWidth: WIDTH,\n            boardHeight: HEIGHT,\n            animation: [],\n            currentFrame: [],\n            frame: 0,\n            currentColor: DEFAULT_COLOR,\n            history: [],\n            sketchColor: \"#FFFFFF\"\n        }\n\n        let frame = new Array(SIZE);\n        frame.fill(DEFAULT_COLOR);\n        this.state.currentFrame = frame;\n    }\n\n    palletColorHandler = (color) => {\n        this.setState({currentColor: color})\n    }\n\n    pixelColorHandler = (index) => {\n        let tempFrame = [...this.state.currentFrame];\n        tempFrame[index] = this.state.currentColor;\n        this.setState({currentFrame: tempFrame});\n    }\n\n    sketchChangeHandler = (color) => {\n        this.setState({ sketchColor: color.hex });\n    };\n\n    addFrameHandler = (type) => {\n        let newFrame = new Array(SIZE);\n\n        if(type === \"new\")\n            newFrame.fill(DEFAULT_COLOR);\n        else if(type === \"copy\")\n            newFrame = this.state.currentFrame;\n\n        this.state.animation.splice(this.state.frame + 1, 0, newFrame)\n    }\n\n    sketchSelectClicked = () => {\n        this.setState({ currentColor: this.state.sketchColor })\n    }\n\n    arrowHandler = (direction) => {\n        console.log(direction);\n    }\n\n    render(){\n        return(\n            <Fragment>\n                <div className={\"boardBuilder__container\"}>\n                    <Colors \n                        currentColor={this.state.currentColor}\n                        sketchColor={this.state.sketchColor}\n                        sketchChangeHandler={this.sketchChangeHandler}\n                        sketchSelectClicked={this.sketchSelectClicked}/>\n                    <Board \n                        width={this.state.boardWidth}\n                        height={this.state.boardHeight}\n                        frame={this.state.currentFrame}\n                        pixelClicked={this.pixelColorHandler} />\n                    <Frames \n                        addFrameHandler={this.addFrameHandler}/>\n                </div>\n            </Fragment>\n        );\n    };\n}\n\nexport default BoardBuilder;"]},"metadata":{},"sourceType":"module"}